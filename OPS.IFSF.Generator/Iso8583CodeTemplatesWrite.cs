namespace OPS.IFSF.Generator;

internal static class Iso8583CodeTemplatesWrite
{
    public static string WriteToHeader(string @namespace, string className, string messageId) => $$"""
    // <auto-generated />
    using System;
    using System.Text;
    using OPS.IFSF.Abstractions.Attributes;
    using OPS.IFSF.Abstractions.Buffers;
    using OPS.IFSF.Abstractions.Models;

    namespace {{@namespace}};
    
    public partial class {{className}}
    {
        public void WriteTo(ChunkedPooledBufferWriter writer)
        {
            var lenSpan = writer.GetSpan(4);
            var messageId = {{messageId}};
            writer.Write(messageId, IsoFieldFormat.NumPad, 4);
            var bitMapDE0 = writer.GetSpan(8);
    """;

    public static string WriteToFooter(string nestedMethods) => $$"""
            var messageLen = writer.TotalLength - 4;
            AsciiHelper.SetLength(messageLen, lenSpan);
        }

    {{nestedMethods}}
    }
    """;

    public static string WriteField(int number, string prop, string format, int length, string comment, string parentNumber) => $"""
            // {comment}
            writer.Write({prop}, {format}, {length});
            AsciiHelper.SetBitMap({number}, bitMapDE{parentNumber});
    """;

    public static string WriteNullableField(int number, string prop, string format, int length, string comment, string parentNumber, string condition, string valueAccess) => $$"""
            if ({{prop}}{{condition}})
            {
                // {{comment}}
                writer.Write({{prop}}{{valueAccess}}, {{format}}, {{length}});
                AsciiHelper.SetBitMap({{number}}, bitMapDE{{parentNumber}});
            }
    """;

    public static string WriteNestedCall(int number, string prop) => $"""
            WriteDE{number}(writer, {prop});
            AsciiHelper.SetBitMap({number}, bitMapDE0);
    """;

    public static string WriteNestedMethod(int number, string propClass, IEnumerable<string> nestedWrites) => $$"""
        private static void WriteDE{{number}}(ChunkedPooledBufferWriter writer, {{propClass}} value)
        {
            var spanDE{{number}} = writer.GetSpan(3);
            var startDE{{number}} = writer.TotalLength;
            var bitMapDE{{number}} = writer.GetSpan(8);
    {{string.Join("\n", nestedWrites)}}
            var lenDE{{number}} = writer.TotalLength - startDE{{number}};
            AsciiHelper.SetLength(lenDE{{number}}, spanDE{{number}});
        }
    """;

    public static string WriteNestedField(int number, string prop, string format, int length, string comment, string parentNumber) => $"""
            // {comment}
            writer.Write({prop}, {format}, {length});
            AsciiHelper.SetBitMap({number}, bitMapDE{parentNumber});
    """;

    public static string WriteNestedNullableField(int number, string prop, string format, int length, string comment, string parentNumber, string condition, string valueAccess) => $$"""
            if ({{prop}}{{condition}})
            {
                // {{comment}}
                writer.Write({{prop}}{{valueAccess}}, {{format}}, {{length}});
                AsciiHelper.SetBitMap({{number}}, bitMapDE{{parentNumber}});
            }
    """;
}
